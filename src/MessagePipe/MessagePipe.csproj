<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net6.0</TargetFrameworks>
    <WarningsAsErrors>true</WarningsAsErrors>
    <Configurations>Debug;Release;WinBenchmark</Configurations>

    <!-- NuGet Packaging -->
    <PackageTags>pubsub;eventaggregator</PackageTags>
    <Description>High performance in-memory/distributed messaging pipeline for .NET and Unity.</Description>
    <SignAssembly>true</SignAssembly>
    <IsPackable>true</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="6.0.0" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework) == 'netstandard2.0'">
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="6.0.0" />
    <PackageReference Include="System.Threading.Channels" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Disposables.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Disposables.cs</LastGenOutput>
    </None>
    <Compile Update="Disposables.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Disposables.tt</DependentUpon>
    </Compile>
  </ItemGroup>

  <!-- Copy files for Unity -->
  <PropertyGroup>
    <DestinationRoot>$(MSBuildProjectDirectory)\..\MessagePipe.Unity\Assets\Plugins\MessagePipe\Runtime\</DestinationRoot>
  </PropertyGroup>
  <ItemGroup>
    <TargetFiles1 Include="$(MSBuildProjectDirectory)\**\*.cs" Exclude="**\bin\**\*.*;**\obj\**\*.*;_InternalVisibleTo.cs" />
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Copy SourceFiles="@(TargetFiles1)" DestinationFiles="$(DestinationRoot)\%(RecursiveDir)%(Filename)%(Extension)" SkipUnchangedFiles="true" />

    <!-- After copy, replace for unity codes -->
    <Exec Command="dotnet run --no-build -c $(ConfigurationName) --project $(MSBuildProjectDirectory)\..\..\tools\PostBuildUtility\PostBuildUtility.csproj -- replace-to-unity $(DestinationRoot)" />
  </Target>
</Project>
